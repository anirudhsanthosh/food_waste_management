declare module API {

    interface pickup {
        id: number
        address: string
        date: string
        phone: string
        place: string
        status: string
        quantity: number
        createdAt: string
        updatedAt: string
        user_id: number
    }

    interface createPickupPayload {
        address: string,
        quantity: number,
    }

    interface adminPickupUpdateParams {
        pickupId: number,
        status: string,
    }



    export interface BloodGroup {
        id: string;
        name: string;
        group: string;
        variation: string;
        comments: string;
        stock: number;
        createdAt: string;
    }


    export interface BloodGroupCreatePayload {
        name: string;
        group: string;
        variation: string;
        comments: string;
        stock: number;
    }

    // Generated by https://quicktype.io

    export interface User {
        uuid: string;
        email: string;
        name: string;
        password: string;
        gender: string;
        age: number;
        bloodGroup: string;
        role: 'user' | 'admin';
        joinedOn: string;
        blood: Blood;
        address: Address[]
        requests?: BloodRequest[]

    }

    export interface Blood {
        id: string;
        name: string;
        group: string;
        variation: string;
        comments: string;
        stock: number;
        createdAt: string;
    }

    interface Address {
        id: string
        houseName: string
        landmark: string
        town: string
        city: string
        pin: number
        userId: number
    }



    type AddressCreatePayload = Omit<Address, "id" | 'userId'>

    type AddressUpdatePayload = Partial<AddressCreatePayload> & { addressId: string }

    interface HealthReport {
        id: string
        bp: string
        cholesterol: string
        weight: number
        height: number
        date: string
        user: User
        userId: number
    }

    type HealthReportCreatePayload = Omit<HealthReport, "id" | 'userId', 'user'>

    type HealthReportUpdatePayload = Partial<HealthReportCreatePayload> & { id: string }


    interface BloodRequest {
        id: string
        createdAt: string
        unit: number
        status: string
        blood: Blood
        bloodGroup: string
        user: User
        userId: number
    }

    type BloodRequestCreatePayload = Pick<BloodRequest, "unit" | "bloodGroup">

    type BloodRequestUpdatePayload = Partial<BloodRequestCreatePayload> & { id: string }

    interface Donation {
        id: string
        createdAt: string
        unit: number
        bloodGroup: string
        userId: number
        blood: BloodGroup
        user: User
    }


    export interface AdminPanelUserData {
        blood: Blood;
        email: string;
        gender: string;
        role: string;
        age: number;
        name: string;
        uuid: string
        joinedOn: string
        id: number;
        _count: {
            donations: number;
            address: number;
            healthReports: number;
            requests: number;
        };
    }


    interface AdminPanelSingleUserData extends AdminPanelUserData {

        address: Address[],
        donation: Donation[],
        requests: BloodRequest[]
        donation: Donation[]
        healthReports: HealthReport[]
    }

    export interface AdminRequest {
        id: string;
        createdAt: string;
        unit: number;
        status: string;
        bloodGroup: string;
        userId: number;
        blood: Blood;
        user: User & {
            id: number
            _count: {
                donations: number,
                requests: number
                address: number
                healthReports: number
            }
        };
    }

    // Generated by https://quicktype.io

    export interface AdminDonation {
        id: string;
        createdAt: string;
        unit: number;
        bloodGroup: string;
        userId: number;
        blood: Blood;
        user: User & { id: number };
    }

    type AdminDonationCreatePayload = Pick<BloodRequest, "unit" | "bloodGroup" | "userId">

    type AdminDonationUpdatePayload = Partial<AdminDonationCreatePayload> & { id: string }

    interface Dashoard {
        _count: {
            address: number;
            donations: number;
            healthReports: number;
            requests: number;
        }
    }


}

